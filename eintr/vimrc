"=============================================================================
" vimrc --- Entry file for vim
" Copyright (c) 2016-2020 Shidong Wang & Contributors
" Author: Shidong Wang < wsdjeg@outlook.com >
" URL: https://spacevim.org
" License: GPLv3
"=============================================================================

" Note: Skip initialization for vim-tiny or vim-small.
if 1
    let g:_spacevim_if_lua = 0
    if has('lua')
        if has('win16') || has('win32') || has('win64')
            let s:plugin_dir = fnamemodify(expand('<sfile>'), ':h').'\lua'
            let s:str = s:plugin_dir . '\?.lua;' . s:plugin_dir . '\?\init.lua;'
        else
            let s:plugin_dir = fnamemodify(expand('<sfile>'), ':h').'/lua'
            let s:str = s:plugin_dir . '/?.lua;' . s:plugin_dir . '/?/init.lua;'
        endif
        silent! lua package.path=vim.eval("s:str") .. package.path
        if empty(v:errmsg)
            let g:_spacevim_if_lua = 1
        endif
    endif
    execute 'source' fnamemodify(expand('<sfile>'), ':h').'/config/main.vim'
endif
" vim:set et sw=2
syntax on
map W :w<cr>
map Q :q<cr>
map s <nop>
map D :%d<cr>
noremap B :bn<cr>

noremap ff za<cr>

noremap ra :resize +10<cr>
noremap rs :resize -10<cr>

" Enable folding
" set foldmethod=indent
set foldmethod=syntax
set foldlevel=99

" Enable folding with the spacebar
set nofoldenable
set cursorline

set autoindent
set textwidth=1000
set fileformat=unix

set cindent
set cinoptions={0,1s,t0,n-2,p2s,(03s,=.5s,>1s,=1s,:1s

set nu
set relativenumber
set ruler

set hlsearch
"set backspace=2
"set nocompatible
"set laststatus=2
set t_Co=256

set mouse=n
set undofile
set undodir=$HOME/.vim/undodir
set autochdir
set autoread

" golang
noremap gb :GoDoc<cr>
noremap gdb :GoDocBrowser<cr>
noremap gi :GoImport 
noremap gc :GoErrCheck<cr>
noremap gd :GoDef<cr>


let g:go_def_mode='gopls'
let g:go_info_mode='gopls'

"""""""""""""""""""""""""""""""
"" Tag list (ctags)  输入”:TlistOpen“时, 打开taglist窗口， 
"":TlistUpdate" 更新taglist, :TlistToggle“在打开和关闭间切换。
"""""""""""""""""""""""""""""""

"设置ctags路径
let Tlist_Ctags_Cmd = '/usr/bin/ctags'

set tags+=~/.vim/tags/c++
set tags+=~/.vim/tags/opencv
set tags+=~/.vim/tags/muduo
set tags+=~/.vim/tags/rocksdb

"启动vim后自动打开taglist窗口
let Tlist_Auto_Open = 1

"不同时显示多个文件的tag，仅显示一个
let Tlist_Show_One_File = 1
"taglist为最后一个窗口时，退出vim
let Tlist_Exit_OnlyWindow = 1

"taglist窗口显示在右侧，缺省为左侧
let Tlist_Use_Right_Window =1
"设置taglist窗口大小
let Tlist_WinWidth = 20

" 自动刷新taglist
" autocmd BufWritePost *.cpp :TlistUpdate 

" build tags of your own project with Ctrl+F12"  
map <C-F12> :!ctags -R --sort=yes --c++-kinds=+p --fields=+iaS --extra=+q .<CR>  

set wrap

let g:tex_flavor = 'latex'

"Python, JavaScript
"let g:kite_supported_languages = ['python', 'javascript', 'go']
let g:kite_supported_languages = ['python', 'javascript']

" All the languages Kite supports
"let g:kite_supported_languages = ['*']

set statusline=%<%f\ %h%m%r%{kite#statusline()}%=%-14.(%l,%c%V%)\ %P
set laststatus=2  " always display the status line"

set completeopt-=menu                                                     
set completeopt+=menuone   " Show the completions UI even with only 1 item
set completeopt-=longest   " Don't insert the longest common text         
set completeopt-=preview   " Hide the documentation preview window        
"set completeopt+=noinsert  " Don't insert text automatically              
set completeopt-=noselect  " Highlight the first completion automatically 


"开关目录树快捷键:
noremap <C-F> :silent! NERDTreeToggle<cr>
let NERDTreeWinSize=20
let g:NERDTreeGitStatusShowIgnored=1
let NERDTreeShowHidden=1
"let g:nerdtree_tabs_open_on_console_startup=1
let  g:NERDTreeGitStatusIndicatorMapCustom= {
            \ "Modified"  : "✹",
            \ "Staged"    : "✚",
            \ "Untracked" : "✭",
            \ "Renamed"   : "➜",
            \ "Unmerged"  : "═",
            \ "Deleted"   : "✖",
            \ "Dirty"     : "✗",
            \ "Clean"     : "✔︎",
            \ 'Ignored'   : '☒',
            \ "Unknown"   : "?"
            \ }

"# o 打开关闭文件或目录
"# e 以文件管理的方式打开选中的目录
"# t 在标签页中打开
"# T 在标签页中打开，但光标仍然留在 NERDTree
"# r 刷新光标所在的目录
"# R 刷新当前根路径
"# X 收起所有目录
"# p 小写，跳转到光标所在的上一级路径
"# P 大写，跳转到当前根路径
"# J 到第一个节点
"# K 到最后一个节点
"# I 显示隐藏文件
"# m 显示文件操作菜单
"# C 将根路径设置为光标所在的目录
"# u 设置上级目录为根路径
"# ctrl + w + w 光标自动在左右侧窗口切换
"# ctrl + w + r 移动当前窗口的布局位置
"# :tabc 关闭当前的 tab
"# :tabo   关闭所有其他的 tab
"# :tabp   前一个 tab
"# :tabn   后一个 tab
"# gT      前一个 tab
"# gt      后一个 tab

" YCM 常用命令
"    :YcmRestartServer　　重启 YCM 服务器
"    :YcmCompleter　　显示可用的子命令
"    :YcmCompleter GetParent　　显示父函数、父类等
"    :YcmCompleter GetType　　显示类型、参数等信息
"    :YcmCompleter GetDoc　　跳转至相关文档（若有）
"    :YcmCompleter GoToDeclaration　　跳转至声明处
"    :YcmCompleter GoToDefinition　　跳转至定义处
"    :YcmCompleter GoToInclude　　跳转至头文件处
noremap fi :YcmCompleter FixIt<cr>
noremap Y :YcmCompleter G

set completeopt=longest,menu
let g:ycm_python_binary_path = '/usr/bin/python3'
let g:ycm_global_ycm_extra_conf='~/.ycm_extra_conf.py'
let g:ycm_server_log_level = 'info'
let g:ycm_confirm_extra_conf = 0
" 禁止缓存匹配项,每次都重新生成匹配项
let g:ycm_autoclose_preview_window_after_completion=1
let g:ycm_cache_omnifunc=0
let g:ycm_collect_identifiers_from_tags_files = 1
let g:ycm_min_num_of_chars_for_completion = 2
let g:ycm_collect_identifiers_from_comments_and_strings = 1
let g:ycm_seed_identifiers_with_syntax=1
"在字符串输入中也能补全
let g:ycm_complete_in_strings = 1
" 在注释中也可以补全
let g:ycm_complete_in_comments=1
" 错误标识符
let g:ycm_error_symbol='XX'
" 警告标识符
let g:ycm_warning_symbol='!!'
let g:ycm_semantic_triggers =  {
            \ 'c,cpp,python,golang,rust,java,erlang,perl': ['re!\w{2}'],
            \ 'cs,lua,javascript': ['re!\w{2}'],
            \ }
"----------------------------------------------------------------------
" Ycm 白名单（非名单内文件不启用 YCM），避免打开个 1MB 的 txt 分析半天
"----------------------------------------------------------------------
let g:ycm_filetype_whitelist = {
                        \ "c":1,
                        \ "cpp":1,
                        \ "go":1,
                        \ "objc":1,
                        \ "objcpp":1,
                        \ "python":1,
                        \ "java":1,
                        \ "javascript":1,
                        \ "coffee":1,
                        \ "vim":1,
                        \ "cs":1,
                        \ "lua":1,
                        \ "perl":1,
                        \ "perl6":1,
                        \ "php":1,
                        \ "ruby":1,
                        \ "rust":1,
                        \ "erlang":1,
                        \ "asm":1,
                        \ "nasm":1,
                        \ "masm":1,
                        \ "tasm":1,
                        \ "asm68k":1,
                        \ "asmh8300":1,
                        \ "asciidoc":1,
                        \ "basic":1,
                        \ "vb":1,
                        \ "make":1,
                        \ "cmake":1,
                        \ "html":1,
                        \ "css":1,
                        \ "less":1,
                        \ "json":1,
                        \ "cson":1,
                        \ "typedscript":1,
                        \ "haskell":1,
                        \ "lhaskell":1,
                        \ "lisp":1,
                        \ "scheme":1,
                        \ "sdl":1,
                        \ "sh":1,
                        \ "zsh":1,
                        \ "bash":1,
                        \ "man":1,
                        \ "markdown":1,
                        \ "matlab":1,
                        \ "maxima":1,
                        \ "dosini":1,
                        \ "conf":1,
                        \ "config":1,
                        \ "zimbu":1,
                        \ "ps1":1,
                        \ }

"" 快速进入复制模式
set pastetoggle=<F9>
